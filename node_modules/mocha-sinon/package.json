{
  "_args": [
    [
      {
        "raw": "mocha-sinon",
        "scope": null,
        "escapedName": "mocha-sinon",
        "name": "mocha-sinon",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Namkai/Projects/flow-engine"
    ]
  ],
  "_from": "mocha-sinon@latest",
  "_id": "mocha-sinon@2.0.0",
  "_inCache": true,
  "_location": "/mocha-sinon",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mocha-sinon-2.0.0.tgz_1489964841780_0.4504082747735083"
  },
  "_npmUser": {
    "name": "elliotf",
    "email": "efoster@firetaco.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mocha-sinon",
    "scope": null,
    "escapedName": "mocha-sinon",
    "name": "mocha-sinon",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/mocha-sinon/-/mocha-sinon-2.0.0.tgz",
  "_shasum": "723a9310e7d737d7b77c7a66821237425b032d48",
  "_shrinkwrap": null,
  "_spec": "mocha-sinon",
  "_where": "/Users/Namkai/Projects/flow-engine",
  "author": {
    "name": "Elliot Foster"
  },
  "bugs": {
    "url": "https://github.com/elliotf/mocha-sinon/issues"
  },
  "dependencies": {},
  "description": "mocha integration for sinon",
  "devDependencies": {
    "chai": "*",
    "mocha": "*",
    "mocha-phantomjs": "*",
    "nodemon": "*",
    "phantomjs-prebuilt": "*",
    "sinon": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "723a9310e7d737d7b77c7a66821237425b032d48",
    "tarball": "https://registry.npmjs.org/mocha-sinon/-/mocha-sinon-2.0.0.tgz"
  },
  "engines": {
    "npm": ">1.2"
  },
  "gitHead": "07de39003a8c78208a0da098da2203643ec99a80",
  "homepage": "https://github.com/elliotf/mocha-sinon#readme",
  "keywords": [
    "mocha",
    "sinon",
    "spies",
    "testing",
    "pollution"
  ],
  "license": "MIT",
  "main": "mocha-sinon.js",
  "maintainers": [
    {
      "name": "elliotf",
      "email": "efoster@firetaco.com"
    }
  ],
  "name": "mocha-sinon",
  "optionalDependencies": {},
  "readme": "mocha-sinon\n====================\n\n[![Build Status](https://secure.travis-ci.org/elliotf/mocha-sinon.png)](http://travis-ci.org/elliotf/mocha-sinon)\n\nIntegration between mocha and sinon, allowing for automatic cleanup of spies\n\n## Installation\n\nvia npm:\n\n```\n$ npm install --save-dev mocha-sinon\n```\n\n## Usage\n\n### Server-side\n\nRequire it somewhere in your spec helper file (easier, better)\n\n```javascript\nrequire('mocha-sinon');\n```\n\nor, on your command line calling mocha:\n\n```javascript\n$ mocha -R mocha-sinon test.js\n```\n\n#### Using mocha's flakey --watch flag\n\nFor background, please see [issue #1](https://github.com/elliotf/mocha-sinon/issues/1) on this project.\n\nIf you use mocha's [flakey watch flag](https://github.com/visionmedia/mocha/pull/266), there is experimental support for it.  Note that the first method of requiring the mocha-sinon is the best way to do it.\n\nYou can put the following block in your spec helper and it might work:\n\n```javascript\nrequire('mocha-sinon')();\n```\n\nNote that the difference between this method and the first method is that this is calling mocha-sinon's exported function.\n\n### Browser-side\n\nSource the mocha-sinon file after you have sourced mocha and sinon, and it will \"do the right thing\"\n\nUnfortunately, I'm not familiar with [requirejs](http://requirejs.org/), so mocha-sinon does not yet support requirejs.  Pull requests are welcome, though.\n\n## Example\n\n```javascript\nvar child_process = require('child_process')\n  , events        = require('events')\n  , chai          = require('chai')\n  , expect        = chai.expect\n;\n\nchai.use(require('sinon-chai'));\nrequire('mocha-sinon');\n\ndescribe('a shell command', function(){\n  beforeEach(function(){\n    var fakeChild = this.fakeChild = {\n      stdout: new events.EventEmitter()\n    };\n\n    this.sinon.stub(child_process, 'spawn', function(){\n      return fakeChild;\n    });\n  });\n\n  it('gets called', function(done){\n    someFunction(function(err){\n      expect(child_process.spawn).to.have.been.calledWith('/usr/bin/env', ['rm', '-rf', '/']);\n    });\n  });\n});\n```\n\n## If you don't like this module\n\nThis module is stupidly simple.  You can do it yourself with:\n\n```javascript\n// require sinon somehow and in your test helper, do:\n\nbeforeEach(function() {\n  if (null == this.sinon) {\n    this.sinon = sinon.sandbox.create();\n  } else {\n    this.sinon.restore();\n  }\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/elliotf/mocha-sinon.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "2.0.0"
}
